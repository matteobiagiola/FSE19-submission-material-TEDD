#--------------------------------------
# validation_check
#--------------------------------------

# Execute the whole test suite to compare it with the schedule that has the highest runtime.
execute_whole_test_suite=false

# Absolute path of the final graph to be checked. It holds if check_final_graph is true.
final_graph_path=

# Enable runtime validation algorithm check.
check_final_graph=true

#--------------------------------------
# default
#--------------------------------------

# Separator for tokenization of the test case name. If empty words are split according to the camel case pattern.
test_case_words_separator=

# If true all intermediate dependency graphs are printed during the refinement.
print_intermediate_graphs=true

# Name of the project with test suite.
project_name=claroline

# Absolute path of test suite in file system.
test_suite_path=/home/anonymous/workspace/FSE19-submission-material/testsuite-claroline/src/main/java/main/TestSuite.java

# Absolute path of tests in file system.
tests_path=/home/anonymous/workspace/FSE19-submission-material/testsuite-claroline/src/main/java/tests

#--------------------------------------
# selenium
#--------------------------------------

# Write operations mapped to selenium actions separated by ':'.
write_actions=sendKeys:selectByVisibleText:selectByValue:deselectByVisibleText:deselectByValue

# If test cases are written using the page object design pattern or not.
page_objects=false

#--------------------------------------
# runtime
#--------------------------------------

# Name of the method of the reset class in project with test suite. The method is going to be called at runtime.
reset_method_name=reset

# If true only the cost of the computing the graph is measured, while the refinement of the graph is not.
only_compute_graph_build_time=false

# Qualified name of reset class in project with test suite. The algorithm needs to reset the application state and the project with test suite must implement a reset method.
reset_class_name=utils.ResetAppState

# Classpath of project with test suite.
project_classpath=/home/anonymous/.m2/repository/io/github/bonigarcia/webdrivermanager/5.3.2/webdrivermanager-5.3.2.jar:/home/anonymous/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/anonymous/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/home/anonymous/.m2/repository/com/google/code/gson/gson/2.8.5/gson-2.8.5.jar:/home/anonymous/.m2/repository/org/apache/commons/commons-lang3/3.7/commons-lang3-3.7.jar:/home/anonymous/.m2/repository/org/apache/httpcomponents/httpclient/4.5.5/httpclient-4.5.5.jar:/home/anonymous/.m2/repository/org/apache/httpcomponents/httpcore/4.4.9/httpcore-4.4.9.jar:/home/anonymous/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/anonymous/.m2/repository/commons-codec/commons-codec/1.10/commons-codec-1.10.jar:/home/anonymous/.m2/repository/org/rauschig/jarchivelib/0.8.0/jarchivelib-0.8.0.jar:/home/anonymous/.m2/repository/org/apache/commons/commons-compress/1.14/commons-compress-1.14.jar:/home/anonymous/.m2/repository/org/jsoup/jsoup/1.11.3/jsoup-1.11.3.jar:/home/anonymous/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/anonymous/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/anonymous/.m2/repository/org/seleniumhq/selenium/selenium-java/3.141.59/selenium-java-3.141.59.jar:/home/anonymous/.m2/repository/org/seleniumhq/selenium/selenium-api/3.141.59/selenium-api-3.141.59.jar:/home/anonymous/.m2/repository/org/seleniumhq/selenium/selenium-chrome-driver/3.141.59/selenium-chrome-driver-3.141.59.jar:/home/anonymous/.m2/repository/org/seleniumhq/selenium/selenium-edge-driver/3.141.59/selenium-edge-driver-3.141.59.jar:/home/anonymous/.m2/repository/org/seleniumhq/selenium/selenium-firefox-driver/3.141.59/selenium-firefox-driver-3.141.59.jar:/home/anonymous/.m2/repository/org/seleniumhq/selenium/selenium-ie-driver/3.141.59/selenium-ie-driver-3.141.59.jar:/home/anonymous/.m2/repository/org/seleniumhq/selenium/selenium-opera-driver/3.141.59/selenium-opera-driver-3.141.59.jar:/home/anonymous/.m2/repository/org/seleniumhq/selenium/selenium-remote-driver/3.141.59/selenium-remote-driver-3.141.59.jar:/home/anonymous/.m2/repository/org/seleniumhq/selenium/selenium-safari-driver/3.141.59/selenium-safari-driver-3.141.59.jar:/home/anonymous/.m2/repository/org/seleniumhq/selenium/selenium-support/3.141.59/selenium-support-3.141.59.jar:/home/anonymous/.m2/repository/net/bytebuddy/byte-buddy/1.8.15/byte-buddy-1.8.15.jar:/home/anonymous/.m2/repository/org/apache/commons/commons-exec/1.3/commons-exec-1.3.jar:/home/anonymous/.m2/repository/com/google/guava/guava/25.0-jre/guava-25.0-jre.jar:/home/anonymous/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/anonymous/.m2/repository/org/checkerframework/checker-compat-qual/2.0.0/checker-compat-qual-2.0.0.jar:/home/anonymous/.m2/repository/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.jar:/home/anonymous/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/home/anonymous/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/home/anonymous/.m2/repository/com/squareup/okhttp3/okhttp/3.11.0/okhttp-3.11.0.jar:/home/anonymous/.m2/repository/com/squareup/okio/okio/1.14.0/okio-1.14.0.jar:/home/anonymous/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar

#--------------------------------------
# refine
#--------------------------------------

# If enabled the dependency graph in 'graph_path' is the ground truth, therefore all the dependencies in that graph must be either manifest or uninteresting.
ground_truth_check=false

#--------------------------------------
# baseline
#--------------------------------------

# Baseline flag: if this flag is true the check for missing dependencies in the runtime validation is disabled
baseline=false

#--------------------------------------
# algorithm
#--------------------------------------

# Algorithm to recover missed dependencies after the initial refinement.
recover_missed_dependencies=true

# Filter write after write dependencies. It works if FILTER_TYPE = nlp.
filter_write_after_write=false

# Type of filtering used to filter dependencies computed by string analysis. It works if the FILTER_DEPENDENCIES flag is true.
filter_type=common_values

# Enable searching for object of a verb in NLP analysis of the test case identifiers. It works if the FILTER_TYPE = nlp.
verb_object_detection=false

# Absolute path of dependency graph dot file in file system.
dependency_graph_path=/home/anonymous/workspace/FSE19-submission-material/tedd/src/main/resources

# Enable filtering of dependencies computed by string analysis.
filter_dependencies=true

# Common values to filter during string analysis separated by ':'. Example: admin, password. It works if the FILTER_TYPE property = common_values.
values_to_filter=admin:admin

# Type of algorithm used to tag elements of the test case identifier name. It works if the FILTER_TYPE = nlp.
pos_tagger_strategy=max_ent

# Enable or disable edit_distance = 1 when comparing constant string values in string analysis.
edit_distance_string_analysis=false

# If true the missing dependencies, if any, have to be added manually by the user.
add_missing_deps_manually=false

# Strategy used to select edges in the dependency graph. See RefinementStrategies class for values.
refinement_strategy=source_first

# Type of algorithm used to search for direct object of a verb in the test case identifier name. It works if the FILTER_TYPE = nlp.
verb_object_detection_strategy=dependency_parser

# Position of the verb in the test case identifier (starting from 0), assuming that there is always a verb in the test case identifier. It is needed to compute precision and recall for the NLP strategies. It works if FILTER_TYPE = nlp.
verb_position_in_test_case_name=0

# Enable computation of stop words based on the test case names in the tests_path. If false stop words are not computed
compute_stop_words=true

# Verbs in the test case name that are classified as read actions separated by ':'.
classified_read_verbs=search:view:check:print

# Absolute path to wordnet dictionary in the file system. It works if FILTER_TYPE = nlp.
wordnet_dict_path=/home/anonymous/Desktop/WordNet-3.0/dict

# Enable searching for nouns in a test case identifier in NLP analysis. It works if the FILTER_TYPE = nlp. It cannot be true if verb_object_detection property is true.
noun_matching=false

# Verbs in the test case name that are classified as write actions separated by ':'.
classified_write_verbs=add:enrol:make:do:remove:assign:edit:close:open:update:delete:unlink:link

